function workonenv() {
    # Determine path to project
    if [[ $# -ne 0 ]]; then
        echo "Usage: $0" 1>&2
        return 1
    elif [[ ! -f "./Pipfile" ]]; then
        echo "./Pipfile: file not found" 1>&2
        return 1
    elif [[ -n "$VIRTUAL_ENV" ]]; then
        echo "do not use this command from within a virtualenv" 1>&2
        return 1
    fi

    # Assuming pipenv is in the path, we should be able to import it and determine the hashed name
    ENV_NAME=$(python -c "from pipenv.project import Project; print(Project('.').virtualenv_name)")

    # Do we have workon?
    HAVE_WORKON=$(type workon | head -1)
    if [[ "$HAVE_WORKON" != "workon is a function" ]]; then
        ehco "virtualenvwrapper may not be active" 1>&2
        return 1
    fi
    
    # Enter the virtual environment
    workon $ENV_NAME
}
 
